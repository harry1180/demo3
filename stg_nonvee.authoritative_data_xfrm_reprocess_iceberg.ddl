CREATE TABLE stg_nonvee.authoritative_data_xfrm_${opco}_reprocess (
	serialnumber STRING,
	source STRING,
	aep_devicecode STRING,
	isvirtual_meter STRING,
	timezoneoffset STRING,
	aep_premise_nb STRING,
	aep_service_point STRING,
	aep_mtr_install_ts STRING,
	aep_mtr_removal_ts STRING,
	aep_srvc_dlvry_id STRING,
	aep_comp_mtr_mltplr DOUBLE,
	name_register STRING,
	isvirtual_register STRING,
	toutier STRING,
	toutiername STRING,
	aep_srvc_qlty_idntfr STRING,
	aep_channel_id STRING,
	aep_raw_uom STRING,
	aep_sec_per_intrvl DOUBLE,
	aep_meter_alias STRING,
	aep_meter_program STRING,
	aep_billable_ind STRING,
	aep_usage_type STRING,
	aep_timezone_cd STRING,
	endtimeperiod STRING,
	starttimeperiod STRING,
	value DOUBLE,
	aep_raw_value DOUBLE,
	scalarfloat DOUBLE,
	aep_data_quality_cd STRING,
	aep_data_validation STRING,
	aep_acct_cls_cd STRING,
	aep_acct_type_cd STRING,
	aep_mtr_pnt_nb STRING,
	aep_tarf_pnt_nb STRING,
	aep_endtime_utc STRING,
	aep_city STRING,
	aep_zip STRING,
	aep_state STRING,
	hdp_update_user STRING,
	hdp_insert_dttm TIMESTAMP,
	hdp_update_dttm TIMESTAMP,
	authority STRING,
	aep_derived_uom STRING,
	aep_opco STRING,
	aep_usage_dt STRING,
	aep_meter_bucket STRING,
	run_dt STRING
)
USING iceberg
PARTITIONED BY (aep_opco, aep_usage_dt, aep_meter_bucket)
LOCATION '${HDFS_DATA_WORK}/util/intervals/authoritative/authoritative_data_xfrm_${opco}_reprocess'
TBLPROPERTIES (
 
  'orc.bloom.filter.columns' = 'serialnumber',
  'orc.bloom.filter.fpp' = '0.05',
  'orc.compress' = 'SNAPPY',
  'orc.create.index' = 'true'
);
